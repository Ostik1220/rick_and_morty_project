{"mappings":"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","sources":["<anon>","src/characters.js","src/js/char-list.js","src/js/char-modal.js","src/js/characters.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire1001\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire1001\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nfunction $590babf6c6c0593b$export$2e2bcd8739ae039(characters) {\n    return characters.map((object)=>`\n    <li class=\"character\">\n      <img class=\"character-image\" src=\"${object.image}\" alt=\"photo of character\"/>\n      <h2 class=\"character-name\">${object.name}</h2>\n      <p class=\"character-text1\">Origin: <span class=\"character-origin\">${object.origin.name}</span></p>\n      <p class=\"character-text2\">Location: <span class=\"character-location\">${object.location.name}</span></p>\n      <button type=\"button\" class=\"character-button\"></button>\n    </li>\n  `).join(\"\");\n}\n\n\nconst $ef2d8b8b8cfb16f2$var$backdrop = document.querySelector('.backdrop');\nconst $ef2d8b8b8cfb16f2$var$modalCloseBtn = document.querySelector('.modal-close');\nconst $ef2d8b8b8cfb16f2$var$modalImage = document.querySelector('.modal-image');\nconst $ef2d8b8b8cfb16f2$var$modalInfo = document.querySelectorAll('.modal-info-info');\nconst $ef2d8b8b8cfb16f2$var$modalEpisodesList = document.querySelector('.modal-episodes-list');\ndocument.addEventListener('click', async (e)=>{\n    const img = e.target.closest('.character-image');\n    if (!img) return;\n    const card = img.closest('.character');\n    const name = card.querySelector('.character-name').textContent;\n    const res = await fetch(`https://rickandmortyapi.com/api/character/?name=${name}`);\n    const data = await res.json();\n    const character = data.results[0];\n    $ef2d8b8b8cfb16f2$var$modalImage.innerHTML = `<img class=\"modal__img\" src=\"${character.image}\" alt=\"${character.name}\">`;\n    $ef2d8b8b8cfb16f2$var$modalInfo[0].textContent = character.status || \"\\u2014\";\n    $ef2d8b8b8cfb16f2$var$modalInfo[1].textContent = character.species || \"\\u2014\";\n    $ef2d8b8b8cfb16f2$var$modalInfo[2].textContent = character.gender || \"\\u2014\";\n    $ef2d8b8b8cfb16f2$var$modalInfo[3].textContent = character.origin?.name || \"\\u2014\";\n    $ef2d8b8b8cfb16f2$var$modalInfo[4].textContent = character.location?.name || \"\\u2014\";\n    $ef2d8b8b8cfb16f2$var$modalEpisodesList.innerHTML = \"\";\n    const firstFive = character.episode.slice(0, 5);\n    for (let url of firstFive){\n        const epRes = await fetch(url);\n        const epData = await epRes.json();\n        const season = epData.episode.slice(1, 3);\n        const episode = epData.episode.slice(4);\n        $ef2d8b8b8cfb16f2$var$modalEpisodesList.innerHTML += `\n      <li class=\"modal-episodes-item\">\n        <h3 class=\"modal-episode-title\">${epData.name}</h3>\n        <div class=\"modal-episode-season\">\n          <p class=\"modal-episode-text\">Season</p>\n          <p class=\"modal-episode-info\">${season}</p>\n        </div>\n        <div class=\"modal-episode-airdate\">\n          <p class=\"modal-episode-text\">Air date</p>\n          <p class=\"modal-episode-info\">${epData.air_date}</p>\n        </div>\n      </li>\n    `;\n    }\n    $ef2d8b8b8cfb16f2$var$backdrop.classList.remove('hidden');\n});\n$ef2d8b8b8cfb16f2$var$modalCloseBtn.addEventListener('click', ()=>$ef2d8b8b8cfb16f2$var$backdrop.classList.add('hidden'));\n$ef2d8b8b8cfb16f2$var$backdrop.addEventListener('click', (e)=>{\n    if (e.target === $ef2d8b8b8cfb16f2$var$backdrop) $ef2d8b8b8cfb16f2$var$backdrop.classList.add('hidden');\n});\ndocument.addEventListener('keydown', (e)=>{\n    if (e.key === 'Escape') $ef2d8b8b8cfb16f2$var$backdrop.classList.add('hidden');\n});\n\n\n\n\nvar $3j7nR = parcelRequire(\"3j7nR\");\nlet $1f92ad6b401fbc38$var$page = 1;\nlet $1f92ad6b401fbc38$var$allCharacters = [];\n(0, $3j7nR.getCharacterList)(1).then((data)=>{\n    if (!data.results) return;\n    $1f92ad6b401fbc38$var$allCharacters = data.results;\n    document.querySelector(\".character-list\").innerHTML = (0, $590babf6c6c0593b$export$2e2bcd8739ae039)($1f92ad6b401fbc38$var$allCharacters);\n    $1f92ad6b401fbc38$var$addFilters();\n    console.log(\"hello\");\n});\nfunction $1f92ad6b401fbc38$var$addFilters() {\n    const input = document.querySelector('.character-input');\n    const selects = document.querySelectorAll('.character-filter-container select');\n    selects.forEach((select)=>{\n        select.addEventListener('change', ()=>{\n            input.value = '';\n            selects.forEach((s)=>{\n                if (s !== select) s.value = 'All';\n            });\n            const value = select.value.toLowerCase();\n            const filterType = select.dataset.filter?.trim();\n            const filtered = $1f92ad6b401fbc38$var$allCharacters.filter((card)=>{\n                if (filterType === 'status') return value === 'all' || card.status.toLowerCase() === value;\n                if (filterType === 'species') return value === 'all' || card.species.toLowerCase() === value;\n                if (filterType === 'type') return value === 'all' || card.type.toLowerCase() === value;\n                if (filterType === 'gender') return value === 'all' || card.gender.toLowerCase() === value;\n                return true;\n            });\n            document.querySelector(\".character-list\").innerHTML = (0, $590babf6c6c0593b$export$2e2bcd8739ae039)(filtered);\n        });\n    });\n    input.addEventListener('input', (e)=>{\n        const searchName = e.target.value.toLowerCase();\n        selects.forEach((s)=>s.value = 'All');\n        const filtered = $1f92ad6b401fbc38$var$allCharacters.filter((card)=>card.name.toLowerCase().includes(searchName));\n        document.querySelector(\".character-list\").innerHTML = (0, $590babf6c6c0593b$export$2e2bcd8739ae039)(filtered);\n    });\n}\ndocument.querySelector('.character-load-more').addEventListener('click', ()=>{\n    $1f92ad6b401fbc38$var$page++;\n    (0, $3j7nR.getCharacterList)($1f92ad6b401fbc38$var$page).then((data)=>{\n        if (!data.results) return;\n        $1f92ad6b401fbc38$var$allCharacters = [\n            ...$1f92ad6b401fbc38$var$allCharacters,\n            ...data.results\n        ];\n        document.querySelector(\".character-list\").insertAdjacentHTML('beforeend', (0, $590babf6c6c0593b$export$2e2bcd8739ae039)(data.results));\n    });\n});\n\n\n\n\n//# sourceMappingURL=characters.e789bf11.js.map\n","import './js/char-list.js';\r\nimport './js/char-modal.js';\r\nimport './js/characters.js';","export default function renderCharacters(characters) {\r\n  return characters.map((object) => `\r\n    <li class=\"character\">\r\n      <img class=\"character-image\" src=\"${object.image}\" alt=\"photo of character\"/>\r\n      <h2 class=\"character-name\">${object.name}</h2>\r\n      <p class=\"character-text1\">Origin: <span class=\"character-origin\">${object.origin.name}</span></p>\r\n      <p class=\"character-text2\">Location: <span class=\"character-location\">${object.location.name}</span></p>\r\n      <button type=\"button\" class=\"character-button\"></button>\r\n    </li>\r\n  `).join(\"\");\r\n}\r\n","const backdrop = document.querySelector('.backdrop');\r\nconst modalCloseBtn = document.querySelector('.modal-close');\r\nconst modalImage = document.querySelector('.modal-image');\r\nconst modalInfo = document.querySelectorAll('.modal-info-info');\r\nconst modalEpisodesList = document.querySelector('.modal-episodes-list');\r\n\r\ndocument.addEventListener('click', async e => {\r\n  const img = e.target.closest('.character-image');\r\n  if (!img) return;\r\n\r\n  const card = img.closest('.character');\r\n  const name = card.querySelector('.character-name').textContent;\r\n\r\n  const res = await fetch(`https://rickandmortyapi.com/api/character/?name=${name}`);\r\n  const data = await res.json();\r\n  const character = data.results[0];\r\n\r\n  modalImage.innerHTML = `<img class=\"modal__img\" src=\"${character.image}\" alt=\"${character.name}\">`;\r\n  modalInfo[0].textContent = character.status || \"—\";\r\n  modalInfo[1].textContent = character.species || \"—\";\r\n  modalInfo[2].textContent = character.gender || \"—\";\r\n  modalInfo[3].textContent = character.origin?.name || \"—\";\r\n  modalInfo[4].textContent = character.location?.name || \"—\";\r\n\r\n  modalEpisodesList.innerHTML = \"\"; \r\n  const firstFive = character.episode.slice(0, 5);\r\n\r\n  for (let url of firstFive) {\r\n    const epRes = await fetch(url);\r\n    const epData = await epRes.json();\r\n\r\n    const season = epData.episode.slice(1, 3); \r\n    const episode = epData.episode.slice(4);  \r\n\r\n    modalEpisodesList.innerHTML += `\r\n      <li class=\"modal-episodes-item\">\r\n        <h3 class=\"modal-episode-title\">${epData.name}</h3>\r\n        <div class=\"modal-episode-season\">\r\n          <p class=\"modal-episode-text\">Season</p>\r\n          <p class=\"modal-episode-info\">${season}</p>\r\n        </div>\r\n        <div class=\"modal-episode-airdate\">\r\n          <p class=\"modal-episode-text\">Air date</p>\r\n          <p class=\"modal-episode-info\">${epData.air_date}</p>\r\n        </div>\r\n      </li>\r\n    `;\r\n  }\r\n\r\n\r\n  backdrop.classList.remove('hidden');\r\n});\r\n\r\nmodalCloseBtn.addEventListener('click', () => backdrop.classList.add('hidden'));\r\nbackdrop.addEventListener('click', e => { if (e.target === backdrop) backdrop.classList.add('hidden'); });\r\ndocument.addEventListener('keydown', e => { if (e.key === 'Escape') backdrop.classList.add('hidden'); });\r\n","import renderCharacters from \"./char-list\";\r\nimport { getCharacterList } from \"./api-requests/getListsApi\";\r\n\r\nlet page = 1;\r\nlet allCharacters = [];\r\n\r\ngetCharacterList(1).then((data) => {\r\n  if (!data.results) return;\r\n  allCharacters = data.results;\r\n  document.querySelector(\".character-list\").innerHTML = renderCharacters(allCharacters);\r\n  addFilters();\r\n  console.log(\"hello\")\r\n});\r\n\r\nfunction addFilters() {\r\n  const input = document.querySelector('.character-input');\r\n  const selects = document.querySelectorAll('.character-filter-container select');\r\n\r\n  selects.forEach(select => {\r\n    select.addEventListener('change', () => {\r\n      input.value = '';\r\n      selects.forEach(s => { if (s !== select) s.value = 'All'; });\r\n\r\n      const value = select.value.toLowerCase();\r\n      const filterType = select.dataset.filter?.trim();\r\n\r\n      const filtered = allCharacters.filter(card => {\r\n        if (filterType === 'status') return value === 'all' || card.status.toLowerCase() === value;\r\n        if (filterType === 'species') return value === 'all' || card.species.toLowerCase() === value;\r\n        if (filterType === 'type') return value === 'all' || card.type.toLowerCase() === value;\r\n        if (filterType === 'gender') return value === 'all' || card.gender.toLowerCase() === value;\r\n        return true;\r\n      });\r\n\r\n      document.querySelector(\".character-list\").innerHTML = renderCharacters(filtered);\r\n    });\r\n  });\r\n\r\n  input.addEventListener('input', (e) => {\r\n    const searchName = e.target.value.toLowerCase();\r\n    selects.forEach(s => s.value = 'All');\r\n    const filtered = allCharacters.filter(card => card.name.toLowerCase().includes(searchName));\r\n    document.querySelector(\".character-list\").innerHTML = renderCharacters(filtered);\r\n  });\r\n}\r\n\r\ndocument.querySelector('.character-load-more').addEventListener('click', () => {\r\n  page++;\r\n  getCharacterList(page).then((data) => {\r\n    if (!data.results) return;\r\n    allCharacters = [...allCharacters, ...data.results];\r\n    document.querySelector(\".character-list\").insertAdjacentHTML('beforeend', renderCharacters(data.results));\r\n  });\r\n});"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","$590babf6c6c0593b$export$2e2bcd8739ae039","characters","map","object","image","name","origin","location","join","id","exports","init","module","call","err","Error","code","register","$ef2d8b8b8cfb16f2$var$backdrop","document","querySelector","$ef2d8b8b8cfb16f2$var$modalCloseBtn","$ef2d8b8b8cfb16f2$var$modalImage","$ef2d8b8b8cfb16f2$var$modalInfo","querySelectorAll","$ef2d8b8b8cfb16f2$var$modalEpisodesList","addEventListener","e","img","target","closest","card","textContent","res","fetch","character","data","json","results","url","innerHTML","status","species","gender","episode","slice","epRes","epData","season","air_date","classList","remove","add","key","$3j7nR","$1f92ad6b401fbc38$var$page","$1f92ad6b401fbc38$var$allCharacters","getCharacterList","then","$1f92ad6b401fbc38$var$addFilters","input","selects","forEach","select","value","s","toLowerCase","filterType","dataset","filter","trim","filtered","type","searchName","includes","console","log","insertAdjacentHTML"],"version":3,"file":"characters.e789bf11.js.map"}